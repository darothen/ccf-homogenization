---------------------------- Module SPLITMERGE ------------------------------

c
c Vers   Date    Description
c
c    --------------------------- Official Version USHCNv2 ----------------------
c    ------------------------ Internal Beta Version USHCNv2 --------------------
c    ---------------------------------- 21 Dec 2006 ----------------------------
c
c  21f 19dec06   allow any tpr model to pass tpr0 model consistency test in testseg 
c
c  21e 13Oct06   ERROR FIX - rsseq returned from MINBIC is actually the standard
c                  deviation - removed second - erroneous - computation of
c                  std dev
c
c  21d 30may06   redefined ndelete for individual targ-pair series
c
c  21c 29may06   added ifail to minbic call (place holder: not used)
c
c  21b 26may06   remove merging of segments when minbic returns SLR 
c
c  21a 24may06   remove complementary changepoint test and reinitialize the 
c                paired difference series after stat split/merge, before minbic
c
c  21  18may06   add complementary changepoint test in the minbic model testing
c
c  20h 11may06   changed minbic option to "2" for critvar test
c
c  20g 11may06   added "offsetting changepoints technique" to remove data and 
c                the later chgpt for a short segment (<= minlenshf) where the
c                estimated adjustments are within 20% (cratio) of each other. 
c
c  20f 09may06   rearranged decision tree in testseg for diverging philosophy
c                between split/merge and minbic procedures
c
c  20e 09may06   all minbic calls use option 4 - no slopevar
c
c  20b 08may06   removed ntest increment, removed "CHGPT EQ MISS" abort at
c                start of segment, added inqtype=5 for BIC run in testseg
c
c  20a 21apr06   rename MLRTest and rewrote mlrtest & testseg for new philosophy
c
c  20  05apr06   reinstated attempt to estimated breakslope (model=8) to
c                  minimize adjustments
c
c  19a 05apr06   SEE v18c - this is the 2nd problem
c                 2) must reinstate the MINBIC model test at the end of the
c                      split/merge step for each statistic, else too many
c                      erroneous changepoints (wrong stat model for data model)
c
c  19  03apr06   FIXED - data erasure for MINLEN in the testseg slipt/merge loop.
c
c  18c 24mar06   found two problems since the Betav6 (Atlanta AMS) MLRTest.v17e
c                 1) overlooked adjusting the SPAN array at v18 when the 
c                      serial to compressed to serial was streamlined
c                 2) SEE v19a
c
c  18b 14mar06  skipping over stablized segments (i.e. no splits in split 
c                 mode and/or no merges in merge mode) save ~10% runtime
c
c  18a 03mar06  fixed change increment for compression 0 in testseg
c
c  18  12feb06  Revisited testseg to change input data arrays from compressed
c                 to serial with missing data. Problem with serial/compressed 
c                 confusion has probably been resident since early v16 or v17
c
c  17h 09feb06  Added sum-square error return from MINBIC
c
c  17g 22jan06  In split/merge (method=1) removed MINBIC for testing data 
c                 model type and call it only for best amplitude (iopt=2)
c
c  17f 22jan06  added inqtype to transfer the stat test used for the
c                 current minbic selection of data models
c
c  17e 21jan06  added input parameter istn21 to denote the index of stn1
c                 as a neighbor of stn2 (=-1 if not)
c
c  17d 15jan06  removed ntest increment - see statubs and calling routine
c                 in ucpmonthly.v9a.f
c
c  17c 13jan06  retained BRKPT model (=8) for changepoints and send model 
c                 types back to calling program as mtype(ninh)
c
c  17b 19dec05  fixed confusion about the "ex" and "in" work arrays in 
c               TESTSEG for changes in the changepoint arrays
c
c  17a 08dec05  pulled the merge for straight line segments out of the BIC
c               loop to remove any question of directional bias
c
c  17  06dec05  rearranged raw temp input to testseg so that segment lengths
c               less than minlen are removed 
c
c  16a 14nov05  remove legacy qsoft3 & monsd used for composite ref series
c               modified some debug statements to work at level 2 (from 3)
c               removed minlen gap for changepoints near edges
c
c  16  12oct05  another major shift during the beta-testing phase comes with
c               Matt's suggestion to put the BIC multi-model test BEFORE
c               the confirmfilt's unconfounding/conflation. See testseg calls.
c       BEWARE: the location vs amplitude and hits vs pairs decision
c               arrays in confirmfilt are based upon single statistic
c               parameter runs. NOT WITH THE MULTI-MODEL OUTPUT.
c               We must rerun the series of bracketing runs on the monthly
c               benchmark to regenerate these arrays.
c
c  15b 29sep05  add ioption parm to BIC code
c
c  15a 22Sep05  Remove "confused" data gaps from the ntest accumulation 
c               (used in the confirmfilt to set the hit threshold for 
c               undocumented chgpts)
c
c  14  16aug05 added isigy1-isigy2 to get span of possible yr/mths for
c              a given chgpt.                      
c
c  Version 13c - removed "not enough data" segments as defined in 
c              13b before the call to testseg       2 aug 05
c
c  Version 13b - Two confusing senarios need to be sorted out - 
c           These senarios should only happen in the t-test (2nd pass),
c              after confirmfilt with Station History added
c           1) The same station has two hits within minlen - this attempt
c              will be to collapse data (effectively using the earlier hit)
c           2) Each station has one each hit within minlen - this attempt
c              will be to NOT USE AT ALL (Alt: ascribe a hit to BOTH stations)
c
c  Version 13a - with the "paired" method the number of stations is
c           ALWAYS 2! Collapsed depave, etc. to give better clarity
c                                                9 may 05
c
c  Version 13 - added the T-test for when method=3. In the process
c           of removing the SHAP algorithm all-together!
c                                                17 mar 05
c
c  Version 12 - metadata (Station History) code at this stage added no
c           additional skill - see ver 16 for better SHF code
c                                                16 feb 05
c  Version 11b - feedback the number of pairwise tests for each of the
c           station-year-month for confirm filter
c                                                08 Mar 05
c
c  Version 11a - Removed all traces of the multi-linear regression and
c           the Durbin-Watson test (the LV routines and their progeny)
c                                                03 Feb 05
c
c  Version 11 - Removed dependence on LV's routine for the adjustment
c           amount. Reverted to a simple weighted average
c                                                21 Jan 05
c
c  Version 10 - Major rework of the algorithm to re-incorporate monthly 
c           data into the series - See testseg for more details
c                                                03 Nov 04
c
c  Version 9t - The pairing method should result in similar results from
c           any reference formulation to each stat-test. This is only the 
c           case for Durbin-Watson (PW, LW, MW). Extend printout to fix
c           inconsistency.
c                                                01 apr 04
c
c  Version 9pm - Parsing/merging re:Hawkins goes forth and back between modes
c           complimentary to LVwrapper.v3pm.f  
c                                                10 feb 04 cw
c
c  Version 8a - Rework the parsing loop for Lucie's Multi-Linear Regress
c    reference series
c                                                  02 Feb 04 
c
c  Version 8 - there is a full split in the ref/stat logic/algorithms....
c    see iscrit and ireftyp arrays below. Added capabilities for options:
c    LW, PW, MW. See inhomog.comm.mthly.incl for definitions
c                                                  26 Jan 04
c       
c  Version 7 - removed several routines to finish cleaning up for the 
c    removal of monthly calculations, depave and monsd are gone along
c    with several arrays.
c                                                  20 Sep 03
c
c  Version 6a - consideration of autocorrelation by several published
c    sources indicates that the statistical threshold level should be
c    increased. To test this, the critical values have been changed 
c    from the 95% to the 97.5% level. Hopefully, this will result in
c    a strong drop in the number of false positives but not correct hits.
c
c  Version 6 contains the expansion of the iopt codes to include
c    the mix&match tests LS, LT, PS, PT (see octpart main routine
c    for definitions)
c
c  Version 5a ensures identical series are bypassed (problem with 
c    random series generation)
c
c  Version 5 saves and returns all prospective changepoints
c
c  Version 4e3 is a gentler, simpler version to let the first pass
c   go through whether it is significantly inhomog or not.
C
c  Version 4 incorporates the Two Phase Regression test from MM.
c    Includes 1) new output tag: MM for TPR
c             2) new test statistic L&R Two phase
c             3) new output files using new output tag
c                                                  27 May 03
c
c  Version 3b contains an attempt to adjust at the changepoints indicated
c    by Menne/Duchon using the Lucie Vincent adjustment procedure
c                                                  6 Feb 03 cw
c
c  Version 3 has been truncated to do annual evaluation
c                                                 22 Oct 02 cw
c
c  June 2002 -- the date intervals were generalized for testing
c  at each relative peak in the Tmax test statistic and for reading
c  the TD3200 data format.  The rhodrvr.f program also has been 
c  integrated into the larger program.
c
c  -------
c
c  21 December, 1999; 12 July, 2001; November 2001; March 2002; June 2002
c
c  This version of MLRTest2.f has been modified for use with the
c   Integrated Homogeneity Test by:
c
c   1)  Making this a subroutine
c   2)  Removing references to Min and Max (the IHT processes one element
c          at a time)
c   3)  Passing the incoming data to getata which populates the arrays
c          used by MLRTest2
c
c  This version of MLRTest evaluates a time series for inhomogeneities 
c  starting with the last observation and working backwards.  In the
c  output, it searches for the first peak of the Tmax test statistic
c  and writes out the month that corresponds to that date.  
c
c  MLR Test is an abbreviation for the Maximum Likelihood Ratio Test.
c  The purpose of this program is to calculate inhomogeneity statistics
c  for a step-change (or shift) and a trend in a time series of monthly
c  mean temperatures from a candidate station.  The basis for this
c  program is the set of papers by Alexandersson and Moberg, the
c  references for which are given in the subroutines. The analysis is
c  intended to be performed on a monthly time step.
c
c  This version differs from our original version in that the q-array 
c  is scaled by an annual cyle of standard deviations of the monthly 
c  means.  All stations, candidate and neighbors, are scaled by the 
c  same monthly standard deviation.  In this sense we can think of 
c  this annual cycle as representative of each station but not unique 
c  to it.  The purpose for doing this is to minimize the effect that 
c  generally higher variance of monthly means in winter than in summer 
c  could have on producing a non-stationary q-time series.
c
c  The first step is to calculate the correlation coefficients between
c  the candidate and each of its neighbors.  These calculations are 
c  performed in subroutines associated with the formerly separate program
c  RHODRVR.  These subroutines, now a part of this program, include:
c  frstdif, depave, & correl.
c
c  A first difference filter is applied to the time series of monthly
c  mean temperatures.  Then the departures from the annual cycle of
c  monthly means of the differenced data for each station are computed.
c  Lastly, the candidate-neighbor correlation coefficients are calculated.
c  Missing data are taken into account in the calculations.
c
c  The MLR Test then makes use of the mean monthly temperatures and 
c  correlation coefficients between the candidate and neighbors. 
c  The latter effectively serve as station weights.
c  The annual cycle of monthly means is computed for each station
c  using an integer number of years.  When a new calendar year of 
c  monthly means becomes available, probably January or February,
c  a new set of correlation coefficients (from RHODRVR)and a new
c  annual cycle for each station (from SNIT) are computed.
c
c  The annual cycle of representive standard deviations of
c  monthly means is provided in subroutine MONSD.
c 
c  MLRTest computes the q and z time series in subroutine QZOFT2.
c  The q series is the monthly differences between the candidate
c  and the mean of its neighbors weighted by their respective
c  correlation coefficients and divided by the representative standard
c  deviations calculate in MONSD.  The z series is the standardized q
c  series.  MLRTest calls the subroutines that calculate the statistics
c  for a step-change or shift (SNITS) and a trend (SNITT).  The outputs
c  from these subtroutines are the step-change and trend statistics.
c  Their maximum values can be compared to a table of critical values
c  of these statistics taken from p. 31 of the 1997 paper and given in
c  subroutine LOOKUP.
c
c  Subroutine LOOKUP provides 90%,95%, and 97.5% critical values as a 
c  function of the number of months in the temperature time series.
c  The critical values are the same for both shifts and trends.  It
c  should be noted that the subroutine that calculates the trend
c  statistic (SNITT)includes the statistic for shifts calculated by
c  the shift subroutine (SNITS).  That both subroutines are included
c  is related to the way the SNIT program was developed.  At some
c  point in the future the latter subroutine (SNITS) can be removed.
c
c  Subroutine maxstep identifies relative peaks in the tmax test 
c  statistic.
c
 
